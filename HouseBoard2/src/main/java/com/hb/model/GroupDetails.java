package com.hb.model;


import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

// Generated Dec 5, 2017 9:22:12 AM by Hibernate Tools 5.2.5.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * GroupDetails generated by hbm2java
 */
@Entity
@Table(name = "group_details", catalog = "houseboard")
public class GroupDetails implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -7582406618054224115L;
	private Integer id;
	private SignUp signUp;
	private String groupName;
	private String groupType;
	
	@Temporal(TemporalType.DATE)
	@JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd HH:mm",timezone="IST")
	private Date dateTime;
	
	private Set<InviteReqSentToFrom> inviteReqSentToFroms = new HashSet<InviteReqSentToFrom>(0);
	private Set<AssignedGroupToUsers> assignedGroupToUserses = new HashSet<AssignedGroupToUsers>(0);
	private Set<HouseBoardTask> houseBoardTasks = new HashSet<HouseBoardTask>(0);
	
	private static final SimpleDateFormat FORMATER = new SimpleDateFormat("MMM dd, yyyy hh:mm a z");

	public GroupDetails() {
	}

	public GroupDetails(SignUp signUp, String groupName, String groupType,
			Set<InviteReqSentToFrom> inviteReqSentToFroms, Set<AssignedGroupToUsers> assignedGroupToUserses,
			Set<HouseBoardTask> houseBoardTasks) {
		this.signUp = signUp;
		this.groupName = groupName;
		this.groupType = groupType;
		this.inviteReqSentToFroms = inviteReqSentToFroms;
		this.assignedGroupToUserses = assignedGroupToUserses;
		this.houseBoardTasks = houseBoardTasks;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "ID", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CREATED_BY")
	public SignUp getSignUp() {
		return this.signUp;
	}

	public void setSignUp(SignUp signUp) {
		this.signUp = signUp;
	}

	@Column(name = "GROUP_NAME", length = 100)
	public String getGroupName() {
		return this.groupName;
	}

	public void setGroupName(String groupName) {
		this.groupName = groupName;
	}

	@Column(name = "GROUP_TYPE", length = 45)
	public String getGroupType() {
		return this.groupType;
	}

	public void setGroupType(String groupType) {
		this.groupType = groupType;
	}
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DATE_TIME", nullable = false, length = 19)
	public Date getDateTime() {
		if(dateTime == null) {
			try {
				dateTime = FORMATER.parse(FORMATER.format(new Date()));
			} catch (ParseException e) {
				e.printStackTrace();
			}
		}
		//System.out.println("get method dateTime is "+this.dateTime);
		return this.dateTime;
	}

	public void setDateTime(Date dateTime) {
		System.out.println("set method dateTime is "+dateTime);
		this.dateTime = dateTime;
	}

	@JsonIgnore
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "groupDetails")
	public Set<InviteReqSentToFrom> getInviteReqSentToFroms() {
		return this.inviteReqSentToFroms;
	}

	public void setInviteReqSentToFroms(Set<InviteReqSentToFrom> inviteReqSentToFroms) {
		this.inviteReqSentToFroms = inviteReqSentToFroms;
	}

	@JsonIgnore
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "groupDetails")
	public Set<AssignedGroupToUsers> getAssignedGroupToUserses() {
		return this.assignedGroupToUserses;
	}

	public void setAssignedGroupToUserses(Set<AssignedGroupToUsers> assignedGroupToUserses) {
		this.assignedGroupToUserses = assignedGroupToUserses;
	}

	@JsonIgnore
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "groupDetails")
	public Set<HouseBoardTask> getHouseBoardTasks() {
		return this.houseBoardTasks;
	}

	public void setHouseBoardTasks(Set<HouseBoardTask> houseBoardTasks) {
		this.houseBoardTasks = houseBoardTasks;
	}

}
